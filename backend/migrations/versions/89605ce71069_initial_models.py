"""Initial models

Revision ID: 89605ce71069
Revises: 
Create Date: 2025-05-13 15:15:54.541204

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '89605ce71069'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###    
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('sessions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('sessions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('FOCUS', 'BREAK', name='sessiontype'), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('RUNNING', 'PAUSED', 'STOPPED', name='sessionstatus'), autoincrement=False, nullable=True),
    sa.Column('focus_secs', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='sessions_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sessions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('oauth_services',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='oauth_services_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='oauth_services_pkey')
    )
    op.create_table('secret_keys',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('service', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('key_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('key_value', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='secret_keys_pkey')
    )
    op.create_table('focus_events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('focus_secs', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('focus_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], name='focus_events_session_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='focus_events_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='focus_events_pkey')
    )
    op.create_table('distractions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('elements', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('focus_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='distractions_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='distractions_pkey')
    )
    op.create_index('ix_distractions_id', 'distractions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_distractions_id', table_name='distractions')
    op.drop_table('distractions')
    op.drop_table('focus_events')
    op.drop_table('secret_keys')
    op.drop_table('oauth_services')
    op.drop_table('sessions')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
